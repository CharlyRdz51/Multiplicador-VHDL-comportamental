-- VHDL data flow description generated from `sum6bc_boom`
--		date : Fri Feb  9 22:48:50 2018


-- Entity Declaration

ENTITY sum6bc_boom IS
  PORT (
  a : in bit_vector(5 DOWNTO 0) ;	-- a
  b : in bit_vector(5 DOWNTO 0) ;	-- b
  cin : in BIT;	-- cin
  sum : out bit_vector(5 DOWNTO 0) ;	-- sum
  cout : out BIT;	-- cout
  vdd : in BIT;	-- vdd
  vss : in BIT	-- vss
  );
END sum6bc_boom;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF sum6bc_boom IS
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux6 : BIT;		-- aux6
  SIGNAL aux8 : BIT;		-- aux8
  SIGNAL aux10 : BIT;		-- aux10
  SIGNAL aux13 : BIT;		-- aux13
  SIGNAL aux14 : BIT;		-- aux14
  SIGNAL aux16 : BIT;		-- aux16
  SIGNAL aux17 : BIT;		-- aux17
  SIGNAL aux20 : BIT;		-- aux20
  SIGNAL aux21 : BIT;		-- aux21
  SIGNAL aux23 : BIT;		-- aux23
  SIGNAL aux25 : BIT;		-- aux25
  SIGNAL aux47 : BIT;		-- aux47
  SIGNAL aux48 : BIT;		-- aux48
  SIGNAL aux49 : BIT;		-- aux49

BEGIN
  aux49 <= (aux16 AND b(3));
  aux48 <= (b(5) XOR a(5));
  aux47 <= (((((aux13 AND (aux8 AND (aux5 AND NOT(a(4))))) 
AND b(2)) OR (((((NOT(a(1)) AND NOT(b(1))) OR NOT(
aux6)) OR NOT(cin)) AND (aux25 AND (aux23 AND a(4))))
 AND NOT(b(2)))) OR ((((aux14 OR b(2)) AND NOT(
a(4))) AND a(2)) OR (((NOT(aux14) OR NOT(b(2))) AND 
a(4)) AND NOT(a(2))))) XOR b(4));
  aux25 <= ((NOT(a(1)) AND NOT(aux10)) OR NOT(b(1)));
  aux23 <= ((NOT(a(1)) OR NOT(a(0))) OR NOT(b(0)));
  aux21 <= NOT(a(4) XOR b(4));
  aux20 <= (((aux17 OR aux16) OR b(3)) AND aux1);
  aux17 <= (a(4) AND b(4));
  aux16 <= ((aux14 AND (a(2) OR b(2))) OR (a(2) AND b(2)));
  aux14 <= (aux13 AND (aux8 AND aux5));
  aux13 <= (((a(1) AND b(1)) OR aux10) OR cin);
  aux10 <= (a(0) AND b(0));
  aux8 <= ((a(1) AND aux6) OR b(1));
  aux6 <= (a(0) OR b(0));
  aux5 <= ((a(1) OR a(0)) OR b(0));
  aux1 <= (a(4) OR b(4));
  aux0 <= (a(5) AND b(5));

cout <= ((aux49 OR aux17 OR aux0 OR a(3)) AND ((aux20 AND
 (a(5) OR b(5))) OR aux0));

sum (0) <= (a(0) XOR b(0) XOR cin);

sum (1) <= (((a(1) XOR aux6 XOR b(1)) AND cin) OR ((a(1) XOR
 aux10 XOR b(1)) AND NOT(cin)));

sum (2) <= (aux14 XOR b(2) XOR a(2));

sum (3) <= (aux16 XOR b(3) XOR a(3));

sum (4) <= ((((aux21 AND b(3)) OR (aux47 AND NOT(b(3)))) AND
 a(3)) OR (((aux47 AND b(3)) OR (NOT(aux21) AND 
NOT(b(3)))) AND NOT(a(3))));

sum (5) <= (((aux20 XOR aux48) AND a(3)) OR ((((aux1 AND 
aux49) OR aux17) XOR aux48) AND NOT(a(3))));
END;
